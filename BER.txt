clear

N = 10 deg * 6 % number of bits or symbols

rand('state', 100); % initializing the rand() function

randn('state',200); % initializing the randn() function
%Transmitter

ip= mnd (1.N)>0.5; generating 0.1 with equal probability

s=2^ * ip -1: % BPSK modulation 01:11

n=1/sqrt(2) [randn( N_{j} +i^ * randn(1,N)]; % white gaussian noise, OdB variance Eb_NO_dB = \{- 3/10\} % multiple Eb/NO values for if=

1:length(Eb_NO_dB)

%Noise addition

y=s+10^ (-Eb\ NO\ d B(ii) / 20 )^ * n; % additive white gaussian noise

% receiver - hard decision decoding

ipHat = real(y)>0;

%counting the errors

Em(ii) = size(find([ip-ipHat]),2);

end

simBernErr/N; % simulated ber

flieoryBer=0.5^ * erfc(sqrt(10.^ ^ (Eb\ N0\ d B / 10 ))); % theoretical ber

% plot

close all

figure

semilogy ( EbNO ,theory Ber,'b.-");

hold on

semilogy(Eb_NO_dB.simBer,'mx-');

axis(1-3 10.1 deg - 5 * 0.5 )

grid on

legend('theory', 'simulation');
xlabel('Eb/No, dB');

ylabel('Bit Error Rate');

title('Bit error probability curve for BPSK modulation');